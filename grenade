// D'abord, on équipe le grenade launcher
global pistoletEquipe = false;
if (pistoletEquipe == false) {
	setWeapon(WEAPON_GRENADE_LAUNCHER); // Attention : coûte 1 PT
	pistoletEquipe = true;
}

// Variables utiles
var enemy = getNearestEnemy();
var startDistance = getCellDistance(getCell(), getCell(enemy));
global currentDirection = 0;
global firstHelmet = true;
global strategy = 0;

if (getAgility(enemy) > 200) { strategy = 1; }

// Fonctions utiles
function getEDistance(enemy) {
	return getCellDistance(getCell(getLeek()), getCell(enemy));
}

function canUseGrenade(enemy) {
	return lineOfSight(getCell(getLeek()), getCell(enemy));
}

function cellToTarget(enemy) {
	var enemyCell = getCell(enemy);
	var enemyX = getCellX(enemyCell);
	var enemyY = getCellY(enemyCell);
	for (var dx = -2; dx < 3; dx++) {
		for (var dy = -2; dy < 3; dy++) {
			var currentCell = getCellFromXY(enemyX + dx, enemyY + dy);
			if (currentCell != null && canUseWeaponOnCell(currentCell) && (abs(dx) + abs(dy)) <= 2) {
				return currentCell;
			}
		}
	}
}

function cellToTargetChip(enemy, chip) {
	var enemyCell = getCell(enemy);
	var enemyX = getCellX(enemyCell);
	var enemyY = getCellY(enemyCell);
	for (var dx = -2; dx < 3; dx++) {
		for (var dy = -2; dy < 3; dy++) {
			var currentCell = getCellFromXY(enemyX + dx, enemyY + dy);
			if (currentCell != null && canUseChipOnCell(chip, currentCell) && (abs(dx) + abs(dy)) <= 2) {
				return currentCell;
			}
		}
	}
}

// Code par tour
if (startDistance < 17) { useChip(CHIP_PROTEIN, getLeek()); }
if (startDistance < 14) { useChip(CHIP_STEROID, getLeek()); }
if (startDistance < 14 && getLife(enemy) >= 150 && strategy == 0) { useChip(CHIP_FORTRESS, getLeek());}

if (getTurn() == 0 && strategy == 0) {
	firstHelmet = false;
	if (useChip(CHIP_HELMET, getLeek()) == USE_SUCCESS) {
		if (useChip(CHIP_WALL, getLeek()) != USE_SUCCESS) {}
	}
}

//On se place
var path = getPath(getCell(getLeek()), getCell(enemy), enemy);
var pathLength = getPathLength(getCell(getLeek()), getCell(enemy), enemy);
var found = false;
for (i = 0; i <= 4; i++) {
   if (!found && lineOfSight(getCell(path[i], getCell(enemy) && (pathLength - i) <= 7)
   {
      found = true;
      moveToward(enemy, i);
      break;
   }
}

while (getEDistance(enemy) < 4) { moveAwayFrom(enemy, 1); }

//On tire sur l'ennemi

var cellToTargetChipEnemy = cellToTargetChip(enemy, CHIP_ICEBERG);
while (cellToTargetChipEnemy != null && getTP() >= 7) {useChipOnCell(CHIP_LIGHTNING, cellToTargetChipEnemy);}

if (getTP() >= 6 && canUseChipOnCell(CHIP_STALACTITE, getCell(enemy))) { useChip(CHIP_STALACTITE, enemy);}

cellToTargetChipEnemy = cellToTargetChip(enemy, CHIP_LIGHTNING);
while (cellToTargetChipEnemy != null && getTP() >= 4) {useChipOnCell(CHIP_LIGHTNING, cellToTargetChipEnemy);}

if (getTP() >= 6) {
	while (useWeaponOnCell(cellToTarget(enemy)) != USE_SUCCESS && getMP() > 0) {
		moveToward(enemy, 1);
	}
}
//On s'éloigne de l'ennemi vers un coin

useChip(CHIP_CURE, getLeek());
useChip(CHIP_HELMET, getLeek());
useChip(CHIP_WALL, getLeek());
